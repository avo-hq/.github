name: System Tests

on:
  workflow_call:
    secrets:
      AVO_CLONE_KEY:
        required: true
      AVO_GEM_TOKEN:
        required: true

env:
  RAILS_ENV: test
  BUNDLE_PATH_RELATIVE_TO_CWD: true
  AVO_LICENSE_KEY: license_123
  PGHOST: localhost
  PGUSER: postgres
  PGPORT: 5432
  POSTGRES_HOST: localhost
  POSTGRES_USERNAME: postgres
  POSTGRES_PORT: 5432

jobs:
  system_specs:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler: default
        ruby-version: 3.3.0

    - name: Add AVO_GEM_TOKEN
      run: bundle config set --global https://packager.dev/avo-hq/ ${{secrets.AVO_GEM_TOKEN}}

    - uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-test-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-test-gems-${{ hashFiles('**/Gemfile.lock') }}

    - name: Clone Avo
      uses: actions/checkout@v3
      with:
        repository: avo-hq/avo
        path: avo
        token: ${{ secrets.AVO_CLONE_KEY }}

    - name: Move Avo up one folder
      run: mv ./avo ./../avo

    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Compile Avo assets (development mode)
      run: |
        cd ../avo
        bundle install
        yarn install
        yarn build
        bin/rails avo:sym_link

    - name: Setup DB
      run: bin/rails db:migrate:reset

    - name: Get yarn cache directory path
      id: test-yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: test-yarn-cache
      with:
        path: ${{ steps.test-yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-test-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-test-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Yarn install the dummy app
      run: |
        cd spec/dummy
        yarn

    - name: Yarn install
      run: yarn

    - name: Build assets
      env:
        RAILS_ENV: production
        NODE_ENV: production
      run: yarn build

    - name: Run tests
      id: run_tests
      run: bundle exec rspec spec/system

    - uses: actions/upload-artifact@v3
      if: always() && steps.run_tests.outcome == 'failure'
      with:
        name: rspec_failed_screenshots_rails
        path: ./spec/dummy/tmp/screenshots
